package raw

import (
	"syscall"
	"testing"
)

func TestCfMakeRaw(t *testing.T) {
	termios := &Termios{
		Iflag: 0x2b02,
		Oflag: 0x1,
		Lflag: 0x5c3,
		Cflag: 0x4b00,
		Cc: [20]byte{
			0x4, 0xff, 0xff, 0xff,
			0x17, 0xff, 0x12, 0xff,
			0x3, 0x1c, 0x1a, 0x19,
			0x11, 0x13, 0x16, 0xf,
			0xff, 0xff, 0x14, 0xff,
		},
		Ispeed: 0x2580, // (9600)
		Ospeed: 0x2580, // (9600)
	}
	CfMakeRaw(termios)
	want := Termios{
		Iflag: 0x2800,
		Oflag: 0x0,
		Lflag: 0x43,
		Cflag: 0x4b00,
		Cc: [20]byte{
			0x4, 0xff, 0xff, 0xff,
			0x17, 0xff, 0x12, 0xff,
			0x3, 0x1c, 0x1a, 0x19,
			0x11, 0x13, 0x16, 0xf,
			0x1, 0x0, 0x14, 0xff,
		},
		Ispeed: 0x2580,
		Ospeed: 0x2580,
	}
	if got := *termios; want != got {
		t.Fatalf("Unexpected Raw termios.\nGot:\t %#v\nWant:\t %#v\n", got, want)
	}
}

func BenchmarkCfMakeRaw(b *testing.B) {
	t := &Termios{}
	for i := 0; i < b.N; i++ {
		CfMakeRaw(t)
		if t.Cc[syscall.VMIN] != 1 {
			b.Fatalf("err")
		}
	}
}
